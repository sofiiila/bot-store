name: CI Pipeline

on: [push]

jobs:
  mypy-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install mypy
    - name: Type check the code with mypy
      run: mypy $(git ls-files '*.py')

  pylint-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint
    - name: Analyse the code with pylint
      run: pylint $(git ls-files '*.py')

  build-and-push:
    runs-on: ubuntu-latest
    needs: [mypy-check, pylint-check]
    if: startsWith(github.ref_name, 'releases/')
    env:
      IMAGE_TAG: ${{ github.ref_name }}
    steps:
    - uses: actions/checkout@v4
    - name: Extract version number from branch
      id: extract_version
      run: echo "VERSION=${IMAGE_TAG#releases/}" >> $GITHUB_ENV
    - name: Log in to Docker Hub
      uses: docker/login-action@v2 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build the Docker image
      run: docker build -t akchaau/bot-store:${{ env.VERSION }} .
    - name: Push the Docker image
      run: docker push akchaau/bot-store:${{ env.VERSION }}